// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Store {
  id              String           @id @default(uuid())
  name            String
  userId          String
  categories      Category[]       @relation("StoreToCategory")
  products        Product[]        @relation("StoreToProduct")
  produtcsFroSell ProductForSell[] @relation("StoreToProductForSell")
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
}

model Category {
  id              String           @id @default(uuid())
  storeId         String
  store           Store            @relation("StoreToCategory", fields: [storeId], references: [id])
  product         Product[]        @relation("CategoryToProduct")
  produtcsFroSell ProductForSell[] @relation("CategoryToProductForSell")
  imageUrl        String
  name            String
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt

  @@index([storeId])
}

model Product {
  id          String             @id @default(uuid())
  storeId     String
  store       Store              @relation("StoreToProduct", fields: [storeId], references: [id])
  categoryId  String
  category    Category           @relation("CategoryToProduct", fields: [categoryId], references: [id])
  name        String
  isFeatured  Boolean            @default(false)
  isArchived  Boolean            @default(false)
  description String
  images      ImageForProducts[]
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt

  @@index([storeId])
  @@index([categoryId])
}

model ImageForProducts {
  id        String   @id @default(uuid())
  producrId String
  product   Product  @relation(fields: [producrId], references: [id], onDelete: Cascade)
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([producrId])
}

model ImageForProductsForSell {
  id               String         @id @default(uuid())
  productForSellId String
  productForSell   ProductForSell @relation(fields: [productForSellId], references: [id], onDelete: Cascade)
  url              String
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt

  @@index([productForSellId])
}

model ProductForSell {
  id          String                    @id @default(uuid())
  storeId     String
  store       Store                     @relation("StoreToProductForSell", fields: [storeId], references: [id])
  categoryId  String
  category    Category                  @relation("CategoryToProductForSell", fields: [categoryId], references: [id])
  name        String
  isFeatured  Boolean                   @default(false)
  isArchived  Boolean                   @default(false)
  description String
  weight      Int
  height      Int
  width       Int
  price       Decimal
  images      ImageForProductsForSell[]
  createdAt   DateTime                  @default(now())
  updatedAt   DateTime                  @updatedAt

  @@index([storeId])
  @@index([categoryId])
}
